<h1 contenteditable>Eze Stom Links Center</h1>

<script>
function getTooltipGradientColor(gradient: string): string {
    const canvas = document.createElement("canvas");
    const ctx = canvas.getContext("2d");

    if (!ctx) {
        throw new Error("Canvas 2D context is not supported");
    }

    canvas.width = 1;
    canvas.height = 1;

    ctx.rect(0, 0, 1, 1);
    const gradientObj = ctx.createLinearGradient(0, 0, 0, 1);
	 gradientObj.addColorStop(0, "transparent");
    ctx.fillStyle = gradientObj;
    ctx.fill();

    const imageData = ctx.getImageData(0, 0, 1, 1);
    const red = imageData.data[0];
    const green = imageData.data[1];
    const blue = imageData.data[2];

    return `rgb(${red}, ${green}, ${blue})`;
}

function updateTooltipPosition(event: MouseEvent): void {
    const tooltip = event.currentTarget as HTMLElement;
    const tooltipRect = tooltip.getBoundingClientRect();
    const positionX = ((event.clientX - tooltipRect.left) / tooltipRect.width) * 100;
    const positionY = ((event.clientY - tooltipRect.top) / tooltipRect.height) * 100;

    tooltip.style.setProperty("--position-x", `${positionX}`);
    tooltip.style.setProperty("--position-y", `${positionY}`);

    const gradient = window.getComputedStyle(tooltip).getPropertyValue("background-image");
    const tooltipGradientColor = getTooltipGradientColor(gradient);
    console.log(tooltipGradientColor);
}

const tooltips = document.querySelectorAll<HTMLElement>(".tooltip");
tooltips.forEach(
	(tooltip) =>
		tooltip.addEventListener("mousemove", updateTooltipPosition)
);

</script>

<style>
	@property --bg-1-x {
		syntax: "<number>";
		inherits: true;
		initial-value: 0;
	}

	@property --bg-2-x {
		syntax: "<number>";
		inherits: true;
		initial-value: 0;
	}
	@property --bg-2-y {
		syntax: "<number>";
		inherits: true;
		initial-value: 0;
	}
	@property --bg-3-x {
		syntax: "<number>";
		inherits: true;
		initial-value: 0;
	}
	@property --bg-3-y {
		syntax: "<number>";
		inherits: true;
		initial-value: 0;
	}

	h1 {
		text-align: center;
		color: white;
		font-size: max(52px, 9vw);
		mix-blend-mode: lighten;
		font-weight: 600;
		/* font-stretch: 110%; */
		letter-spacing: -0.04em;
		background: var(--bg-grain),
			conic-gradient(
				from 140deg at calc(var(--bg-1-x) * 1%) 90%,
				hsl(30deg 100% 5%),
				hsl(238deg 100% 5%),
				hsl(60deg 100% 99%),
				hsl(248deg 100% 31%),
				hsl(315deg 64% 51%),
				hsl(25deg 95% 61%),
				hsl(55deg 100% 75%),
				hsl(60deg 100% 99%),
				hsl(199deg 94% 74%),
				hsl(236deg 95% 28%),
				hsl(244deg 100% 4%)
			),
			radial-gradient(
				ellipse at calc(var(--bg-2-x) * 1%) calc(var(--bg-2-y) * 1%),
				white 12%,
				transparent 35%
			),
			radial-gradient(
				ellipse at calc(var(--bg-3-x) * 1%) calc(var(--bg-3-y) * 1%),
				hsl(212deg 94% 68%),
				transparent 35%
			);
		background-repeat: repeat;
		background-size: 500px, cover;
		background-blend-mode: color-burn;
		background-clip: text;
		-webkit-text-fill-color: transparent;
		opacity: 1;
		animation: bg 20s linear infinite alternate;
		transition: all 0.3s ease-in-out;
	}
	h1:hover {
		cursor: grab;
	}
	h1:active {
		scale: 0.98;
	}
</style>
